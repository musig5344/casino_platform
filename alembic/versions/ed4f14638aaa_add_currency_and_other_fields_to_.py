"""Add currency and other fields to Transaction model

Revision ID: ed4f14638aaa
Revises: 
Create Date: 2025-04-21 04:52:11.194767

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed4f14638aaa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_table('games')
    op.drop_index('ix_transactions_id', table_name='transactions')
    op.drop_index('ix_transactions_player_id', table_name='transactions')
    op.drop_index('ix_transactions_transaction_id', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_aml_risk_profiles_id', table_name='aml_risk_profiles')
    op.drop_index('ix_aml_risk_profiles_player_id', table_name='aml_risk_profiles')
    op.drop_table('aml_risk_profiles')
    op.drop_index('ix_game_history_id', table_name='game_history')
    op.drop_table('game_history')
    op.drop_index('ix_aml_reports_id', table_name='aml_reports')
    op.drop_index('ix_aml_reports_player_id', table_name='aml_reports')
    op.drop_index('ix_aml_reports_report_id', table_name='aml_reports')
    op.drop_table('aml_reports')
    op.drop_index('ix_aml_transactions_id', table_name='aml_transactions')
    op.drop_index('ix_aml_transactions_player_id', table_name='aml_transactions')
    op.drop_index('ix_aml_transactions_transaction_id', table_name='aml_transactions')
    op.drop_table('aml_transactions')
    op.drop_table('wallets')
    op.drop_index('ix_baccarat_rounds_id', table_name='baccarat_rounds')
    op.drop_index('ix_baccarat_rounds_room_id', table_name='baccarat_rounds')
    op.drop_table('baccarat_rounds')
    op.drop_index('ix_aml_alerts_id', table_name='aml_alerts')
    op.drop_index('ix_aml_alerts_player_id', table_name='aml_alerts')
    op.drop_table('aml_alerts')
    op.drop_index('ix_players_id', table_name='players')
    op.drop_table('players')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('players',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='players_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_players_id', 'players', ['id'], unique=False)
    op.create_table('aml_alerts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('aml_alerts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('alert_type', postgresql.ENUM('LARGE_TRANSACTION', 'UNUSUAL_PATTERN', 'STRUCTURING', 'HIGH_RISK_COUNTRY', 'SANCTIONS_MATCH', 'PEP_MATCH', 'RAPID_MOVEMENT', 'MANUAL', name='alerttype'), autoincrement=False, nullable=False),
    sa.Column('alert_severity', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='alertseverity'), autoincrement=False, nullable=False),
    sa.Column('alert_status', postgresql.ENUM('NEW', 'INVESTIGATING', 'DISMISSED', 'REPORTED', 'CLOSED', name='alertstatus'), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('detection_rule', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('reviewed_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('review_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reviewed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('transaction_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('transaction_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('alert_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('reported_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('report_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='aml_alerts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_aml_alerts_player_id', 'aml_alerts', ['player_id'], unique=False)
    op.create_index('ix_aml_alerts_id', 'aml_alerts', ['id'], unique=False)
    op.create_table('baccarat_rounds',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('room_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('player_cards', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('banker_cards', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('player_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('banker_score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('result', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('shoe_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='baccarat_rounds_pkey')
    )
    op.create_index('ix_baccarat_rounds_room_id', 'baccarat_rounds', ['room_id'], unique=False)
    op.create_index('ix_baccarat_rounds_id', 'baccarat_rounds', ['id'], unique=False)
    op.create_table('wallets',
    sa.Column('player_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0.00'), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='wallets_player_id_fkey'),
    sa.PrimaryKeyConstraint('player_id', name='wallets_pkey')
    )
    op.create_table('aml_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('player_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_large_transaction', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_suspicious_pattern', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_unusual_for_player', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_structuring_attempt', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_regulatory_report_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('risk_factors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('regulatory_threshold_currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('regulatory_threshold_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('reporting_jurisdiction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('analysis_version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('analysis_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='aml_transactions_pkey')
    )
    op.create_index('ix_aml_transactions_transaction_id', 'aml_transactions', ['transaction_id'], unique=True)
    op.create_index('ix_aml_transactions_player_id', 'aml_transactions', ['player_id'], unique=False)
    op.create_index('ix_aml_transactions_id', 'aml_transactions', ['id'], unique=False)
    op.create_table('aml_reports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('report_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('player_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('report_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('jurisdiction', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('alert_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_ids', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('report_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('submission_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['aml_alerts.id'], name='aml_reports_alert_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='aml_reports_pkey')
    )
    op.create_index('ix_aml_reports_report_id', 'aml_reports', ['report_id'], unique=True)
    op.create_index('ix_aml_reports_player_id', 'aml_reports', ['player_id'], unique=False)
    op.create_index('ix_aml_reports_id', 'aml_reports', ['id'], unique=False)
    op.create_table('game_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('game_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('room_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bet_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('bet_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('result', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payout', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('game_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['players.id'], name='game_history_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_history_pkey')
    )
    op.create_index('ix_game_history_id', 'game_history', ['id'], unique=False)
    op.create_table('aml_risk_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('overall_risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('deposit_risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('withdrawal_risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('gameplay_risk_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_deposit_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_withdrawal_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_played_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deposit_count_7d', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deposit_amount_7d', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('withdrawal_count_7d', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('withdrawal_amount_7d', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('deposit_count_30d', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deposit_amount_30d', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('withdrawal_count_30d', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('withdrawal_amount_30d', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('wager_to_deposit_ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('withdrawal_to_deposit_ratio', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('risk_factors', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('risk_mitigation', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('last_assessment_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='aml_risk_profiles_pkey')
    )
    op.create_index('ix_aml_risk_profiles_player_id', 'aml_risk_profiles', ['player_id'], unique=True)
    op.create_index('ix_aml_risk_profiles_id', 'aml_risk_profiles', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('player_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('original_transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('game_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('transaction_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='transactions_player_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey')
    )
    op.create_index('ix_transactions_transaction_id', 'transactions', ['transaction_id'], unique=True)
    op.create_index('ix_transactions_player_id', 'transactions', ['player_id'], unique=False)
    op.create_index('ix_transactions_id', 'transactions', ['id'], unique=False)
    op.create_table('games',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('thumbnail', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='games_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    # ### end Alembic commands ###
